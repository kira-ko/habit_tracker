import 'package:flutter/material.dart';
import 'package:habit_tracker/Theme/colors.dart'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å —Ü–≤–µ—Ç–∞–º–∏
import 'package:habit_tracker/models/habit.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø—Ä–∏–≤—ã—á–∫–∏

class CreateHabitScreen extends StatefulWidget {
  @override
  _CreateHabitScreenState createState() => _CreateHabitScreenState();
}

class _CreateHabitScreenState extends State<CreateHabitScreen> {
  // –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫
  List<Habit> habits = [];

  // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫)
  TextEditingController _habitNameController = TextEditingController();
  TextEditingController _habitDescriptionController = TextEditingController();
  Color habitColor = AppColors.green; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–µ–ª–µ–Ω—ã–π

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤–≤–µ–¥–µ–Ω–æ –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
  bool get isSaveEnabled => _habitNameController.text.isNotEmpty;

  // –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫
  List<List<bool>> habitCompletionStatus = [];


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background, // –§–æ–Ω –≤—Å–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
      body: SingleChildScrollView( // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ ScrollView
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –¶–≤–µ—Ç–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å
            Container(
              width: double.infinity,
              height: 250,
              color: habitColor, // –¶–≤–µ—Ç –ø—Ä–∏–≤—ã—á–∫–∏
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
                    IconButton(
                      icon: Icon(Icons.arrow_back, color: AppColors.primaryText), // –°—Ç—Ä–µ–ª–æ—á–∫–∞
                      onPressed: () {
                        Navigator.pop(context); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
                      },
                    ),
                    // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –≤–∏–¥–∏–º–∞—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
                    Visibility(
                      visible: isSaveEnabled,
                      child: ElevatedButton(
                        onPressed: isSaveEnabled
                            ? () {
                          // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤—ã—á–∫—É
                          Habit newHabit = Habit(
                            id: DateTime.now().millisecondsSinceEpoch.toString(),
                            title: _habitNameController.text,
                            description: _habitDescriptionController.text,
                            colorValue: habitColor.value, // üí° –ø–µ—Ä–µ–¥–∞—ë–º int!
                            completionStatus: List.filled(7, false),
                          );



                          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω –∏ –ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä–∏–≤—ã—á–∫—É
                          Navigator.pop(context, newHabit);
                        }
                            : null,
                        child: Text('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', style: TextStyle(color: AppColors.background)),
                        style: ElevatedButton.styleFrom(
                          backgroundColor: AppColors.primaryText,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(20),
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),

            // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16.0),
              child: TextField(
                controller: _habitNameController,
                style: TextStyle(fontSize: 32, color: AppColors.primaryText),
                decoration: InputDecoration(
                  border: InputBorder.none,
                  hintText: '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏',
                  hintStyle: TextStyle(color: AppColors.primaryText),
                ),
                onChanged: (text) {
                  setState(() {}); // –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                },
              ),
            ),

            // –ë–ª–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Container(
                width: double.infinity,
                height: 120,
                decoration: BoxDecoration(
                  color: AppColors.cardBackground,
                  borderRadius: BorderRadius.circular(20),
                ),
                child: Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        '–û–ø–∏—Å–∞–Ω–∏–µ',
                        style: TextStyle(fontSize: 18, color: AppColors.primaryText),
                      ),
                      TextField(
                        controller: _habitDescriptionController,
                        decoration: InputDecoration(
                          border: InputBorder.none,
                          hintText: '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),

            // –ë–ª–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º —Ü–≤–µ—Ç–∞
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Container(
                width: double.infinity,
                height: 80,
                decoration: BoxDecoration(
                  color: AppColors.cardBackground,
                  borderRadius: BorderRadius.circular(20),
                ),
                child: Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        '–¶–≤–µ—Ç',
                        style: TextStyle(fontSize: 18, color: AppColors.primaryText),
                      ),
                      Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          for (var color in [
                            AppColors.green,
                            AppColors.pink,
                            AppColors.blue,
                            AppColors.yellow,
                          ])
                            GestureDetector(
                              onTap: () {
                                setState(() {
                                  habitColor = color;
                                });
                              },
                              child: Padding(
                                padding: const EdgeInsets.symmetric(horizontal: 5.0),
                                child: AnimatedSwitcher(
                                  duration: Duration(milliseconds: 300),
                                  child: Container(
                                    key: ValueKey(color),
                                    width: 40,
                                    height: 40,
                                    decoration: BoxDecoration(
                                      color: color,
                                      borderRadius: BorderRadius.circular(15),
                                    ),
                                    child: habitColor == color
                                        ? Icon(
                                      Icons.check,
                                      color: AppColors.primaryText,
                                      size: 24,
                                    )
                                        : SizedBox.shrink(),
                                  ),
                                ),
                              ),
                            ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
